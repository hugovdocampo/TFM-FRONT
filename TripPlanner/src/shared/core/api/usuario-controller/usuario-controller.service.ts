/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpHeaders,
  HttpParams,
} from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import type {
  FindUsuariosParams,
  UsuarioDetalle,
  UsuarioDto,
} from '../../model';

type HttpClientOptions = {
  headers?:
    | HttpHeaders
    | {
        [header: string]: string | string[];
      };
  context?: HttpContext;
  observe?: any;
  params?:
    | HttpParams
    | {
        [param: string]:
          | string
          | number
          | boolean
          | ReadonlyArray<string | number | boolean>;
      };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};

@Injectable({ providedIn: 'root' })
export class UsuarioControllerService {
  constructor(private http: HttpClient) {}
  getUsuario<TData = UsuarioDto>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/usuarios/${id}`, options);
  }
  updateUsuario<TData = void>(
    id: number,
    usuarioDto: UsuarioDto,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.put<TData>(`/usuarios/${id}`, usuarioDto, options);
  }
  deleteUsuario<TData = void>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.delete<TData>(`/usuarios/${id}`, options);
  }
  getUsuarios<TData = UsuarioDto[]>(
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/usuarios`, options);
  }
  createUsuario<TData = number>(
    usuarioDto: UsuarioDto,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.post<TData>(`/usuarios`, usuarioDto, options);
  }
  findUsuarios<TData = UsuarioDetalle[]>(
    params: FindUsuariosParams,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/usuarios/search`, {
      ...options,
      params: { ...params, ...options?.params },
    });
  }
  findUsuarioByEmail<TData = UsuarioDto>(
    email: string,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(
      `/usuarios/findUsuarioByEmail/${email}`,
      options,
    );
  }
}

export type GetUsuarioClientResult = NonNullable<UsuarioDto>;
export type UpdateUsuarioClientResult = NonNullable<void>;
export type DeleteUsuarioClientResult = NonNullable<void>;
export type GetUsuariosClientResult = NonNullable<UsuarioDto[]>;
export type CreateUsuarioClientResult = NonNullable<number>;
export type FindUsuariosClientResult = NonNullable<UsuarioDetalle[]>;
export type FindUsuarioByEmailClientResult = NonNullable<UsuarioDto>;
