/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpHeaders,
  HttpParams,
} from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import type { PagoDetalleDto, PagoDto, PagoRequest } from '../../model';

type HttpClientOptions = {
  headers?:
    | HttpHeaders
    | {
        [header: string]: string | string[];
      };
  context?: HttpContext;
  observe?: any;
  params?:
    | HttpParams
    | {
        [param: string]:
          | string
          | number
          | boolean
          | ReadonlyArray<string | number | boolean>;
      };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};

@Injectable({ providedIn: 'root' })
export class PagoControllerService {
  constructor(private http: HttpClient) {}
  getPago<TData = PagoDetalleDto>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/pagos/${id}`, options);
  }
  updatePago<TData = void>(
    id: number,
    pagoDto: PagoDto,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.put<TData>(`/pagos/${id}`, pagoDto, options);
  }
  deletePago<TData = void>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.delete<TData>(`/pagos/${id}`, options);
  }
  getPagos<TData = PagoDetalleDto[]>(
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/pagos`, options);
  }
  createPago<TData = number>(
    pagoRequest: PagoRequest,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.post<TData>(`/pagos`, pagoRequest, options);
  }
  getPagosByIdViaje<TData = PagoDetalleDto[]>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/pagos/usuario/${id}`, options);
  }
}

export type GetPagoClientResult = NonNullable<PagoDetalleDto>;
export type UpdatePagoClientResult = NonNullable<void>;
export type DeletePagoClientResult = NonNullable<void>;
export type GetPagosClientResult = NonNullable<PagoDetalleDto[]>;
export type CreatePagoClientResult = NonNullable<number>;
export type GetPagosByIdViajeClientResult = NonNullable<PagoDetalleDto[]>;
