/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpHeaders,
  HttpParams,
} from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import type { ViajeDetalleDto, ViajeDto } from '../../model';

type HttpClientOptions = {
  headers?:
    | HttpHeaders
    | {
        [header: string]: string | string[];
      };
  context?: HttpContext;
  observe?: any;
  params?:
    | HttpParams
    | {
        [param: string]:
          | string
          | number
          | boolean
          | ReadonlyArray<string | number | boolean>;
      };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};

@Injectable({ providedIn: 'root' })
export class ViajeControllerService {
  constructor(private http: HttpClient) {}
  getViaje<TData = ViajeDetalleDto>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/viajes/${id}`, options);
  }
  updateViaje<TData = void>(
    id: number,
    viajeDto: ViajeDto,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.put<TData>(`/viajes/${id}`, viajeDto, options);
  }
  deleteViaje<TData = void>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.delete<TData>(`/viajes/${id}`, options);
  }
  getViajes<TData = ViajeDto[]>(
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/viajes`, options);
  }
  createViaje<TData = number>(
    createViajeBody: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.post<TData>(`/viajes`, createViajeBody, options);
  }
  findViajesByUserId<TData = ViajeDto[]>(
    idUsuario: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/viajes/usuario/${idUsuario}`, options);
  }
}

export type GetViajeClientResult = NonNullable<ViajeDetalleDto>;
export type UpdateViajeClientResult = NonNullable<void>;
export type DeleteViajeClientResult = NonNullable<void>;
export type GetViajesClientResult = NonNullable<ViajeDto[]>;
export type CreateViajeClientResult = NonNullable<number>;
export type FindViajesByUserIdClientResult = NonNullable<ViajeDto[]>;
