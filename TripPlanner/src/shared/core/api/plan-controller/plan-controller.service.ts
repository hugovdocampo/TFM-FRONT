/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpHeaders,
  HttpParams,
} from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import type {
  FindPlanesByIdViajeParams,
  PlanDetalleDto,
  PlanDto,
} from '../../model';

type HttpClientOptions = {
  headers?:
    | HttpHeaders
    | {
        [header: string]: string | string[];
      };
  context?: HttpContext;
  observe?: any;
  params?:
    | HttpParams
    | {
        [param: string]:
          | string
          | number
          | boolean
          | ReadonlyArray<string | number | boolean>;
      };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};

@Injectable({ providedIn: 'root' })
export class PlanControllerService {
  constructor(private http: HttpClient) {}
  getPlan<TData = PlanDetalleDto>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/api/planes/${id}`, options);
  }
  updatePlan<TData = void>(
    id: number,
    planDto: PlanDto,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.put<TData>(`/api/planes/${id}`, planDto, options);
  }
  deletePlan<TData = void>(
    id: number,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.delete<TData>(`/api/planes/${id}`, options);
  }
  getPlanes<TData = PlanDto[]>(options?: HttpClientOptions): Observable<TData> {
    return this.http.get<TData>(`/api/planes`, options);
  }
  createPlan<TData = number>(
    planDto: PlanDto,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.post<TData>(`/api/planes`, planDto, options);
  }
  findPlanesByIdViaje<TData = PlanDetalleDto[]>(
    params: FindPlanesByIdViajeParams,
    options?: HttpClientOptions,
  ): Observable<TData> {
    return this.http.get<TData>(`/api/planes/search`, {
      ...options,
      params: { ...params, ...options?.params },
    });
  }
}

export type GetPlanClientResult = NonNullable<PlanDetalleDto>;
export type UpdatePlanClientResult = NonNullable<void>;
export type DeletePlanClientResult = NonNullable<void>;
export type GetPlanesClientResult = NonNullable<PlanDto[]>;
export type CreatePlanClientResult = NonNullable<number>;
export type FindPlanesByIdViajeClientResult = NonNullable<PlanDetalleDto[]>;
